DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEE_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEES_BY_USERNAME`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_EMPLOYEE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_EMPLOYEE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_EMPLOYEE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEE_RECEIVED_MESSAGES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEE_SEND_MESSAGES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_SUPPLIER_WITH_MIN_DELIVERIES`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CUSTOMER_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CUSTOMERS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CUSTOMER_BY_USERNAME`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_CUSTOMER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_CUSTOMER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_CUSTOMER`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_USER_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_USER_BY_USERNAME`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_USER_BY_EMAIL`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_USERS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_USER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_USER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_USER`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_ADDRESS_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_ADDRESSES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_ADDRESS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_ADDRESS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_ADDRESS`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_STORAGE_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_STORAGES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_STORAGES_RUNNING_OUT_OF_SPACE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_STORAGE_BY_BATCH_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_STORAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_STORAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_STORAGE`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_MAKER_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_MAKERS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_MAKER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_MAKER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_MAKER`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_AVAILABLE_PRODUCTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_RUNNING_OUT_PRODUCTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_PRODUCT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PRODUCT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_PRODUCT`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CAR_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CARS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEE_CAR`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_CAR`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_CAR`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_CAR`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_MESSAGE_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EMPLOYEE_MESSAGES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_MESSAGES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_MESSAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_MESSAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_MESSAGE_CONTENT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_MESSAGE_READ`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`COUNT_UNREAD_RECEIVED_MESSAGES`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PAYMENT_TYPE_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PAYMENT_TYPES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_PAYMENT_TYPE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PAYMENT_TYPE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_PAYMENT_TYPE`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PAYMENT_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PAYMENTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CLIENT_PAYMENTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_PAYMENT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_PAYMENT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PAYMENT_VALUE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PAYMENT_STATE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`COMPLETE_PAYMENT`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_DELIVERY_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_DELIVERIES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_DELIVERY`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_DELIVERY`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_DELIVERY_REMOVE_FROM_STORAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_DELIVERY_COMPLETE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_DELIVERY`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_ORDER_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_ORDERS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CUSTOMER_ORDERS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_SUPPLIER_ACTIVE_ORDERS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_ORDER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_ORDER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_ORDER_STATE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_ORDER_PAYMENT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`ORDER_STATISTICS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`ORDERS_BETWEEN`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_BATCH_BY_PRODUCT_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_BATCHES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_BATCH_BY_PRODUCT_BATCH_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_BATCH_WITH_DISCOUNT_BY_PRODUCT_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_PRODUCT_BATCH`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_PRODUCT_BATCH`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PRODUCT_BATCH`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_ALL`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_BY_BATCH_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_EXPIRED_PRODUCTS_IN_STORAGES`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_QUANTITY_WITH_REGULAR_PRICE_AND_PRODUCT_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_BATCH_QUANTITY_BY_PRODUCT_BATCH_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_WITH_REGULAR_PRICE_AND_PRODUCT_ID_ASC`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_PRICE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_PRODUCT_IN_STORAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PRODUCT_IN_STORAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_PRODUCT_IN_STORAGE`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_TOP_10_PRODUCTS`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_ORDER_BY_ORDER_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_ORDER_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_PRODUCT_ORDER_ALL`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_PRODUCT_ORDER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`UPDATE_PRODUCT_ORDER`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`DELETE_PRODUCT_ORDER`;

DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_COMPLAINT_BY_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_COMPLAINT_BY_ORDER_ID`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_COMPLAINTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`GET_CUSTOMER_COMPLAINTS`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`INSERT_COMPLAINT`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`COMPLAINT_CANCEL`;
DROP PROCEDURE IF EXISTS `foodwarehouse`.`COMPLAINT_ADD_DECISION`;




DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EMPLOYEE_BY_ID`(
	IN `IN_EMPLOYEE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`EMPLOYEE`
	JOIN `foodwarehouse`.`USER` `EMPLOYEE_USER` ON `EMPLOYEE`.`USER_ID` = `EMPLOYEE_USER`.`USER_ID`
	WHERE `EMPLOYEE_ID` = `IN_EMPLOYEE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EMPLOYEES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`EMPLOYEE` 
	JOIN `foodwarehouse`.`USER` `EMPLOYEE_USER` ON `EMPLOYEE`.`USER_ID` = `EMPLOYEE_USER`.`USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EMPLOYEES_BY_USERNAME`(
	IN `IN_CUSTOMER_USERNAME` VARCHAR(32)
) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`EMPLOYEE` 
	JOIN `foodwarehouse`.`USER` `EMPLOYEE_USER` ON `EMPLOYEE`.`USER_ID` = `EMPLOYEE_USER`.`USER_ID`
	WHERE `USERNAME` = `IN_CUSTOMER_USERNAME`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_EMPLOYEE`(
	IN `IN_USER_ID` INT UNSIGNED,
	IN `IN_NAME` VARCHAR(32),
	IN `IN_SURNAME` VARCHAR(64),
	IN `IN_POSITION` VARCHAR(32),
	IN `IN_SALARY` FLOAT(8,2),
	OUT `OUT_EMPLOYEE_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`EMPLOYEE`(
		`USER_ID`,
		`NAME`,
		`SURNAME`,
		`POSITION`,
		`SALARY`)
	VALUES(
		`IN_USER_ID`,
		`IN_NAME`,
		`IN_SURNAME`,
		`IN_POSITION`,
		`IN_SALARY`);
	SET `OUT_EMPLOYEE_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_EMPLOYEE`(
	IN `IN_EMPLOYEE_ID` INT UNSIGNED,
	IN `IN_NAME` VARCHAR(32),
	IN `IN_SURNAME` VARCHAR(64),
	IN `IN_POSITION` VARCHAR(32),
	IN `IN_SALARY` FLOAT(8,2)) 
BEGIN 
	UPDATE `foodwarehouse`.`EMPLOYEE`
	SET `NAME` = `IN_NAME`,
		`SURNAME` = `IN_SURNAME`,
		`POSITION` = `IN_POSITION`,
		`SALARY` = `IN_SALARY`
	WHERE `EMPLOYEE_ID` = `IN_EMPLOYEE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_EMPLOYEE`(
	IN `IN_EMPLOYEE_ID` INT UNSIGNED)
BEGIN 
	DELETE `foodwarehouse`.`EMPLOYEE`, `foodwarehouse`.`USER`
 	FROM `foodwarehouse`.`EMPLOYEE`
	JOIN `foodwarehouse`.`USER` ON `EMPLOYEE`.`USER_ID` = `USER`.`USER_ID`
	WHERE `EMPLOYEE`.`EMPLOYEE_ID` = `IN_EMPLOYEE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EMPLOYEE_SEND_MESSAGES`(
	IN `IN_EMPLOYEE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`EMPLOYEE`
	WHERE `EMPLOYEE_ID` IN (
		SELECT `SENDER_ID`
		FROM `foodwarehouse`.`MESSAGES`
		WHERE `SENDER_ID` = `IN_EMPLOYEE_ID`);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EMPLOYEE_RECEIVED_MESSAGES`(
	IN `IN_EMPLOYEE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`EMPLOYEE`
	WHERE `EMPLOYEE_ID` IN (
		SELECT `RECEIVER_ID`
		FROM `foodwarehouse`.`MESSAGES`
		WHERE `RECEIVER_ID` = `IN_EMPLOYEE_ID`);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_SUPPLIER_WITH_MIN_DELIVERIES`() 
BEGIN 
	SELECT * 
	FROM `DELIVERY`
	RIGHT JOIN `EMPLOYEE` ON `DELIVERY`.`SUPPLIER_ID` = `EMPLOYEE`.`EMPLOYEE_ID` 
	JOIN `USER` `EMPLOYEE_USER` ON `EMPLOYEE_USER`.`USER_ID` = `EMPLOYEE`.`USER_ID` 
	WHERE `EMPLOYEE_USER`.`PERMISSION` = 'Supplier' 
	AND `DELIVERY`.`DELIVERY_DATE` IS NULL
	GROUP BY `DELIVERY`.`SUPPLIER_ID` 
	ORDER BY COUNT(*) ASC 
	LIMIT 1;
END;//

--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CUSTOMER_BY_ID`(
	IN `IN_CUSTOMER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`CUSTOMER` 
	JOIN `foodwarehouse`.`USER` `CUSTOMER_USER` ON `CUSTOMER`.`USER_ID` = `CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `CUSTOMER_ADDRESS` ON `CUSTOMER`.`ADDRESS_ID` = `CUSTOMER_ADDRESS`.`ADDRESS_ID`
	WHERE `CUSTOMER_ID` = `IN_CUSTOMER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CUSTOMER_BY_USERNAME`(
	IN `IN_CUSTOMER_USERNAME` VARCHAR(32)) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`CUSTOMER` 
	JOIN `foodwarehouse`.`USER` `CUSTOMER_USER` ON `CUSTOMER`.`USER_ID` = `CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `CUSTOMER_ADDRESS` ON `CUSTOMER`.`ADDRESS_ID` = `CUSTOMER_ADDRESS`.`ADDRESS_ID`
	WHERE `USERNAME` = `IN_CUSTOMER_USERNAME`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CUSTOMERS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`CUSTOMER` 
	JOIN `foodwarehouse`.`USER` `CUSTOMER_USER` ON `CUSTOMER`.`USER_ID` = `CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `CUSTOMER_ADDRESS` ON `CUSTOMER`.`ADDRESS_ID` = `CUSTOMER_ADDRESS`.`ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_CUSTOMER`(
	IN `IN_USER_ID` INT UNSIGNED,
	IN `IN_ADDRESS_ID` INT UNSIGNED,
	IN `IN_NAME` VARCHAR(32),
	IN `IN_SURNAME` VARCHAR(64),
	IN `IN_FIRM_NAME` VARCHAR(256),
    IN `TELEPHONE_NO` VARCHAR(32),
    IN `TAX_ID` VARCHAR(32),
	OUT `OUT_CUSTOMER_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`CUSTOMER`(
		`USER_ID`,
		`ADDRESS_ID`,
		`NAME`,
		`SURNAME`,
		`FIRM_NAME`,
		`TELEPHONE_NO`,
		`TAX_ID`,
		`DISCOUNT`)
	VALUES(
		`IN_USER_ID`,
		`IN_ADDRESS_ID`,
		`IN_NAME`,
		`IN_SURNAME`,
		`IN_FIRM_NAME`,
		`TELEPHONE_NO`,
		`TAX_ID`,
		NULL);
	SET `OUT_CUSTOMER_ID` = LAST_INSERT_ID();
END;//


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_CUSTOMER`(
	IN `IN_CUSTOMER_ID` INT UNSIGNED,
	IN `IN_NAME` VARCHAR(32),
	IN `IN_SURNAME` VARCHAR(64),
	IN `IN_FIRM_NAME` VARCHAR(256),
    IN `IN_TELEPHONE_NO` VARCHAR(32),
    IN `IN_TAX_ID` VARCHAR(32),
	IN `IN_DISCOUNT` INT UNSIGNED) 
BEGIN 
	UPDATE `foodwarehouse`.`CUSTOMER`
	SET `NAME` = `IN_NAME`,
		`SURNAME` = `IN_SURNAME`,
		`FIRM_NAME` = `IN_FIRM_NAME`,
		`TELEPHONE_NO` = `IN_TELEPHONE_NO`,
		`TAX_ID` = `IN_TAX_ID`,
		`DISCOUNT` = `IN_DISCOUNT`
	WHERE `CUSTOMER_ID` = `IN_CUSTOMER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_CUSTOMER`(
	IN `IN_CUSTOMER_ID` INT UNSIGNED)
BEGIN 
	DELETE `foodwarehouse`.`CUSTOMER`, `foodwarehouse`.`USER`
	FROM `foodwarehouse`.`CUSTOMER`
	JOIN `foodwarehouse`.`USER` ON `CUSTOMER`.`USER_ID` = `USER`.`USER_ID`
	WHERE `CUSTOMER`.`CUSTOMER_ID` = `IN_CUSTOMER_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_USER_BY_ID`(
	IN `IN_USER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`USER` 
	WHERE `USER_ID` = `IN_USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_USER_BY_USERNAME`(
	IN `IN_USERNAME` VARCHAR(32)) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`USER` 
	WHERE `USERNAME` = `IN_USERNAME`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_USER_BY_EMAIL`(
	IN `IN_EMAIL` VARCHAR(32)) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`USER` 
	WHERE `E_MAIL` = `IN_EMAIL`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_USERS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`USER`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_USER`(
	IN `IN_USERNAME` VARCHAR(32),
	IN `IN_PASSWORD` VARCHAR(64),
	IN `IN_PERMISSION` VARCHAR(32),
	IN `IN_E_MAIL` VARCHAR(32),
	OUT `OUT_USER_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`USER`(
		`USERNAME`,
		`PASSWORD`,
		`PERMISSION`,
		`E_MAIL`)
	VALUES(
		`IN_USERNAME`,
		`IN_PASSWORD`,
		`IN_PERMISSION`,
		`IN_E_MAIL`);
	SET `OUT_USER_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_USER`(
	IN `IN_USER_ID` INT UNSIGNED,
	IN `IN_USERNAME` VARCHAR(32),
	IN `IN_PASSWORD` VARCHAR(64),
	IN `IN_PERMISSION` VARCHAR(32),
	IN `IN_E_MAIL` VARCHAR(32)) 
BEGIN 
	UPDATE `foodwarehouse`.`USER`
	SET `USERNAME` = `IN_USERNAME`,
		`PERMISSION` = `IN_PERMISSION`,
		`E_MAIL` = `IN_E_MAIL`
	WHERE `USER_ID` = `IN_USER_ID`;

	IF `IN_PASSWORD` != "" THEN
		UPDATE `foodwarehouse`.`USER`
		SET	`PASSWORD` = `IN_PASSWORD`
		WHERE `USER_ID` = `IN_USER_ID`;
	END IF;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_USER`(
	IN `IN_USER_ID` INT UNSIGNED)
BEGIN 
	DELETE FROM `foodwarehouse`.`USER`
	WHERE `USER_ID` = `IN_USER_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--




DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_ADDRESS_BY_ID`(
	IN `IN_ADDRESS_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`ADDRESS`
	WHERE `ADDRESS_ID` = `IN_ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_ADDRESSES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`ADDRESS`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_ADDRESS`(
	IN `IN_COUNTRY` VARCHAR(32),
	IN `IN_TOWN` VARCHAR(128),
	IN `IN_POSTAL_CODE` VARCHAR(16),
	IN `IN_BUILDING_NO` VARCHAR(16),
	IN `IN_STREET` VARCHAR(64),
	IN `IN_APARTMENT_NO` VARCHAR(16),
	OUT `OUT_ADDRESS_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`ADDRESS`(
		`COUNTRY`,
		`TOWN`,
		`POSTAL_CODE`,
		`BUILDING_NO`,
		`STREET`,
		`APARTMENT_NO`)
	VALUES(
		`IN_COUNTRY`,
		`IN_TOWN`,
		`IN_POSTAL_CODE`,
		`IN_BUILDING_NO`,
		`IN_STREET`,
		`IN_APARTMENT_NO`);
	SET `OUT_ADDRESS_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_ADDRESS`(
	IN `IN_ADDRESS_ID` INT UNSIGNED,
	IN `IN_COUNTRY` VARCHAR(32),
	IN `IN_TOWN` VARCHAR(128),
	IN `IN_POSTAL_CODE` VARCHAR(16),
	IN `IN_BUILDING_NO` VARCHAR(16),
	IN `IN_STREET` VARCHAR(64),
	IN `IN_APARTMENT_NO` VARCHAR(16)) 
BEGIN 
	UPDATE `foodwarehouse`.`ADDRESS`
	SET `COUNTRY` = `IN_COUNTRY`,
		`TOWN` = `IN_TOWN`,
		`POSTAL_CODE` = `IN_POSTAL_CODE`,
		`BUILDING_NO` = `IN_BUILDING_NO`,
		`STREET` = `IN_STREET`,
		`APARTMENT_NO` = `IN_APARTMENT_NO`
	WHERE `ADDRESS_ID` = `IN_ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_ADDRESS`(
	IN `IN_ADDRESS_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`ADDRESS`
	WHERE `ADDRESS_ID` = `IN_ADDRESS_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_STORAGE_BY_ID`(
	IN `IN_STORAGE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`STORAGE`
	JOIN `foodwarehouse`.`ADDRESS` `STORAGE_ADDRESS` ON `STORAGE`.`ADDRESS_ID` = `STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `STORAGE_EMPLOYEE` ON `STORAGE`.`MANAGER_ID` = `STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `STORAGE_EMPLOYEE_USER` ON `STORAGE_EMPLOYEE`.`USER_ID` = `STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `STORAGE_ID` = `IN_STORAGE_ID`;
END;//	

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_STORAGE_BY_BATCH_ID`(
	IN `IN_BATCH_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`STORAGE`
	JOIN `foodwarehouse`.`ADDRESS` `STORAGE_ADDRESS` ON `STORAGE`.`ADDRESS_ID` = `STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `STORAGE_EMPLOYEE` ON `STORAGE`.`MANAGER_ID` = `STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `STORAGE_EMPLOYEE_USER` ON `STORAGE_EMPLOYEE`.`USER_ID` = `STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `STORAGE_ID` = (
		SELECT `STORAGE_ID` 
		FROM `PRODUCT_IN_STORAGE`
		JOIN `PRODUCT_BATCH` `IN_STORAGE` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `IN_STORAGE`.`BATCH_ID`
		JOIN `PRODUCT_BATCH` `IN_ORDER` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `IN_BATCH_ID`
		WHERE `PRODUCT_IN_STORAGE`.`BATCH_ID` = `IN_BATCH_ID`
		AND `IN_STORAGE`.`EAT_BY_DATE` = `IN_ORDER`.`EAT_BY_DATE`
		LIMIT 1);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_STORAGES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`STORAGE`
	JOIN `foodwarehouse`.`ADDRESS` `STORAGE_ADDRESS` ON `STORAGE`.`ADDRESS_ID` = `STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `STORAGE_EMPLOYEE` ON `STORAGE`.`MANAGER_ID` = `STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `STORAGE_EMPLOYEE_USER` ON `STORAGE_EMPLOYEE`.`USER_ID` = `STORAGE_EMPLOYEE_USER`.`USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_STORAGES_RUNNING_OUT_OF_SPACE`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`STORAGE`
	JOIN `foodwarehouse`.`ADDRESS` `STORAGE_ADDRESS` ON `STORAGE`.`ADDRESS_ID` = `STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `STORAGE_EMPLOYEE` ON `STORAGE`.`MANAGER_ID` = `STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `STORAGE_EMPLOYEE_USER` ON `STORAGE_EMPLOYEE`.`USER_ID` = `STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `STORAGE`.`STORAGE_ID` IN (
		SELECT `STORAGE`.`STORAGE_ID`
		FROM `foodwarehouse`.`STORAGE`
		JOIN `foodwarehouse`.`PRODUCT_IN_STORAGE` ON `STORAGE`.`STORAGE_ID` = `PRODUCT_IN_STORAGE`.`STORAGE_ID`
		GROUP BY `STORAGE`.`STORAGE_ID`
		HAVING `STORAGE`.`CAPACITY` < SUM(`PRODUCT_IN_STORAGE`.`QUANTITY`) + 100);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_STORAGE`(
    IN `IN_ADDRESS_ID` INT UNSIGNED,
    IN `IN_MANAGER_ID` INT UNSIGNED,
    IN `IN_STORAGE_NAME` VARCHAR(32),
    IN `IN_CAPACITY` INT UNSIGNED,
    IN `IN_IS_COLD_STORAGE` BOOLEAN,
	OUT `OUT_STORAGE_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`STORAGE`(
		`ADDRESS_ID`,
		`MANAGER_ID`,
		`STORAGE_NAME`,
		`CAPACITY`,
		`IS_COLD_STORAGE`)
	VALUES(
		`IN_ADDRESS_ID`,
		`IN_MANAGER_ID`,
		`IN_STORAGE_NAME`,
		`IN_CAPACITY`,
		`IN_IS_COLD_STORAGE`);
	SET `OUT_STORAGE_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_STORAGE`(
	IN `IN_STORAGE_ID` INT UNSIGNED,
	IN `IN_MANAGER_ID` INT UNSIGNED,
    IN `IN_STORAGE_NAME` VARCHAR(32),
    IN `IN_CAPACITY` INT UNSIGNED,
    IN `IN_IS_COLD_STORAGE` BOOLEAN) 
BEGIN 
	UPDATE `foodwarehouse`.`STORAGE`
	SET `MANAGER_ID` = `IN_MANAGER_ID`,
		`STORAGE_NAME` = `IN_STORAGE_NAME`,
		`CAPACITY` = `IN_CAPACITY`,
		`IS_COLD_STORAGE` = `IN_IS_COLD_STORAGE`
	WHERE `STORAGE_ID` = `IN_STORAGE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_STORAGE`(
	IN `IN_STORAGE_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`STORAGE`
	WHERE `STORAGE_ID` = `IN_STORAGE_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_MAKER_BY_ID`(
	IN `IN_MAKER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`MAKER`
	JOIN `foodwarehouse`.`ADDRESS` `MAKER_ADDRESS` ON `MAKER`.`ADDRESS_ID` = `MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `MAKER_ID` = `IN_MAKER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_MAKERS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`MAKER`
	JOIN `foodwarehouse`.`ADDRESS` `MAKER_ADDRESS` ON `MAKER`.`ADDRESS_ID` = `MAKER_ADDRESS`.`ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_MAKER`(
    IN `IN_ADDRESS_ID` INT UNSIGNED,
    IN `IN_FIRM_NAME` VARCHAR(256),
    IN `IN_TELEPHONE_NO` VARCHAR(12),
    IN `IN_E_MAIL` VARCHAR(32),
	OUT `OUT_MAKER_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`MAKER`(
		`ADDRESS_ID`,
		`FIRM_NAME`,
		`TELEPHONE_NO`,
		`E_MAIL`)
	VALUES(
		`IN_ADDRESS_ID`,
		`IN_FIRM_NAME`,
		`IN_TELEPHONE_NO`,
		`IN_E_MAIL`);
	SET `OUT_MAKER_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_MAKER`(
    IN `IN_MAKER_ID` INT UNSIGNED,
    IN `IN_FIRM_NAME` VARCHAR(256),
    IN `IN_TELEPHONE_NO` VARCHAR(12),
    IN `IN_E_MAIL` VARCHAR(32))
BEGIN 
	UPDATE `foodwarehouse`.`MAKER`
	SET `FIRM_NAME` = `IN_FIRM_NAME`,
		`TELEPHONE_NO` = `IN_TELEPHONE_NO`,
		`E_MAIL` = `IN_E_MAIL`
	WHERE `MAKER_ID` = `IN_MAKER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_MAKER`(
	IN `IN_MAKER_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`MAKER`
	WHERE `MAKER_ID` = `IN_MAKER_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_BY_ID`(
	IN `IN_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_MAKER` ON `PRODUCT`.`MAKER_ID` = `PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_MAKER_ADDRESS` ON `PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT_ID` = `IN_PRODUCT_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_RUNNING_OUT_PRODUCTS`() 
BEGIN 
	SELECT *
	FROM `foodwarehouse`.`PRODUCT`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_MAKER` ON `PRODUCT`.`MAKER_ID` = `PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_MAKER_ADDRESS` ON `PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT`.`PRODUCT_ID` NOT IN (
		SELECT `PROD`.`PRODUCT_ID`
		FROM `foodwarehouse`.`PRODUCT` `PROD`
		JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PROD`.`PRODUCT_ID` = `PRODUCT_BATCH`.`PRODUCT_ID`
		JOIN `foodwarehouse`.`PRODUCT_IN_STORAGE` ON `PRODUCT_BATCH`.`BATCH_ID` = `PRODUCT_IN_STORAGE`.`BATCH_ID`
		WHERE `PRODUCT_BATCH`.`EAT_BY_DATE` > DATE_ADD(CURRENT_DATE(), INTERVAL 14 DAY)
		GROUP BY `PROD`.`PRODUCT_ID`
		HAVING SUM(`PRODUCT_IN_STORAGE`.`QUANTITY`) > 4 * (
			SELECT SUM(`PRODUCT_ORDER`.`QUANTITY`) / 7
			FROM `foodwarehouse`.`PRODUCT`
			JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PRODUCT`.`PRODUCT_ID` = `PRODUCT_BATCH`.`PRODUCT_ID`
			JOIN `foodwarehouse`.`PRODUCT_ORDER` ON `PRODUCT_ORDER`.`BATCH_ID` = `PRODUCT_BATCH`.`BATCH_ID`
			JOIN `foodwarehouse`.`ORDER` ON `ORDER`.`ORDER_ID` = `PRODUCT_ORDER`.`ORDER_ID`
			WHERE `PRODUCT`.`PRODUCT_ID` = `PROD`.`PRODUCT_ID`
			AND `ORDER`.`ORDER_DATE` BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY) AND CURRENT_DATE()
		)
	);
END;//


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCTS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_MAKER` ON `PRODUCT`.`MAKER_ID` = `PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_MAKER_ADDRESS` ON `PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_TOP_10_PRODUCTS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_MAKER` ON `PRODUCT`.`MAKER_ID` = `PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_MAKER_ADDRESS` ON `PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PRODUCT`.`PRODUCT_ID` = `PRODUCT_BATCH`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`PRODUCT_ORDER` ON `PRODUCT_BATCH`.`BATCH_ID` = `PRODUCT_ORDER`.`BATCH_ID`
	JOIN `foodwarehouse`.`ORDER` ON `PRODUCT_ORDER`.`ORDER_ID` = `ORDER`.`ORDER_ID`
	WHERE `ORDER`.`ORDER_DATE` BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()
	GROUP BY `PRODUCT_BATCH`.`PRODUCT_ID`
	ORDER BY SUM(`PRODUCT_ORDER`.`QUANTITY`) DESC
	LIMIT 10;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_AVAILABLE_PRODUCTS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_MAKER` ON `PRODUCT`.`MAKER_ID` = `PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_MAKER_ADDRESS` ON `PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT`.`PRODUCT_ID` IN (
		SELECT `PRODUCT_BATCH`.`PRODUCT_ID`
		FROM `foodwarehouse`.`PRODUCT_BATCH`
		JOIN `foodwarehouse`.`PRODUCT_IN_STORAGE` ON `PRODUCT_BATCH`.`BATCH_ID` = `PRODUCT_IN_STORAGE`.`BATCH_ID`
		WHERE `PRODUCT_BATCH`.`EAT_BY_DATE` > DATE_ADD(CURRENT_DATE(), INTERVAL 14 DAY)
        GROUP BY `PRODUCT_BATCH`.`BATCH_ID`
		HAVING SUM(`PRODUCT_IN_STORAGE`.`QUANTITY`) > 0);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_PRODUCT`(
    IN `IN_MAKER_ID` INT UNSIGNED,
    IN `IN_PRODUCT_NAME` VARCHAR(32),
	IN `IN_SHORT_DESCRIPTION` VARCHAR(64),
	IN `IN_LONG_DESCRIPTION` TEXT,
    IN `IN_CATEGORY` VARCHAR(32),
    IN `IN_NEED_COLD_STORAGE` VARCHAR(5),
    IN `IN_BUY_PRICE` FLOAT(6,2),
    IN `IN_SELL_PRICE` FLOAT(6,2),
	IN `IN_IMAGE` MEDIUMBLOB,
	OUT `OUT_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`PRODUCT`(
		`MAKER_ID`,
		`PRODUCT_NAME`,
		`SHORT_DESCRIPTION`,
		`LONG_DESCRIPTION`,
		`CATEGORY`,
		`NEED_COLD_STORAGE`,
		`BUY_PRICE`,
		`SELL_PRICE`,
		`IMAGE`)
	VALUES(
		`IN_MAKER_ID`,
		`IN_PRODUCT_NAME`,
		`IN_SHORT_DESCRIPTION`,
		`IN_LONG_DESCRIPTION`,
		`IN_CATEGORY`,
		`IN_NEED_COLD_STORAGE`,
		`IN_BUY_PRICE`,
		`IN_SELL_PRICE`,
		`IN_IMAGE`);
	SET `OUT_PRODUCT_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PRODUCT`(
	IN `IN_PRODUCT_ID` INT UNSIGNED,
    IN `IN_PRODUCT_NAME` VARCHAR(32),
	IN `IN_SHORT_DESCRIPTION` VARCHAR(64),
	IN `IN_LONG_DESCRIPTION` TEXT,
    IN `IN_CATEGORY` VARCHAR(32),
    IN `IN_NEED_COLD_STORAGE` VARCHAR(5),
    IN `IN_BUY_PRICE` FLOAT(6,2),
    IN `IN_SELL_PRICE` FLOAT(6,2),
	IN `IN_IMAGE` MEDIUMBLOB)
BEGIN 
	UPDATE `foodwarehouse`.`PRODUCT`
	SET `PRODUCT_NAME` = `IN_PRODUCT_NAME`,
		`SHORT_DESCRIPTION` = `IN_SHORT_DESCRIPTION`,
		`LONG_DESCRIPTION` = `IN_LONG_DESCRIPTION`,
		`CATEGORY` = `IN_CATEGORY`,
		`NEED_COLD_STORAGE` = `IN_NEED_COLD_STORAGE`,
		`BUY_PRICE` = `IN_BUY_PRICE`,
		`SELL_PRICE` = `IN_SELL_PRICE`,
		`IMAGE` = `IN_IMAGE`
	WHERE `PRODUCT_ID` = `IN_PRODUCT_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_PRODUCT`(
	IN `IN_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`PRODUCT`
	WHERE `PRODUCT_ID` = `IN_PRODUCT_ID`;
END;//




--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CAR_BY_ID`(
	IN `IN_CAR_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`CAR`
	JOIN `foodwarehouse`.`EMPLOYEE` `CAR_EMPLOYEE` ON `CAR`.`DRIVER_ID` = `CAR_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `CAR_EMPLOYEE_USER` ON `CAR_EMPLOYEE`.`USER_ID` = `CAR_EMPLOYEE_USER`.`USER_ID`
	WHERE `CAR`.`CAR_ID` = `IN_CAR_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CARS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`CAR`
	JOIN `foodwarehouse`.`EMPLOYEE` `CAR_EMPLOYEE` ON `CAR`.`DRIVER_ID` = `CAR_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `CAR_EMPLOYEE_USER` ON `CAR_EMPLOYEE`.`USER_ID` = `CAR_EMPLOYEE_USER`.`USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_CAR`(
    IN `IN_DRIVER_ID` INT UNSIGNED,
    IN `IN_BRAND` VARCHAR(32),
    IN `IN_MODEL` VARCHAR(32),
    IN `IN_YEAR_OF_PROD` INT UNSIGNED,
    IN `IN_REGISTRATION_NO` VARCHAR(16),
    IN `IN_INSURANCE_EXP` DATE,
    IN `IN_INSPECTION_EXP` DATE,
	OUT `OUT_CAR_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`CAR`(
		`DRIVER_ID`,
		`BRAND`,
		`MODEL`,
		`YEAR_OF_PROD`,
		`REGISTRATION_NO`,
		`INSURANCE_EXP`,
		`INSPECTION_EXP`)
	VALUES(
		`IN_DRIVER_ID`,
		`IN_BRAND`,
		`IN_MODEL`,
		`IN_YEAR_OF_PROD`,
		`IN_REGISTRATION_NO`,
		`IN_INSURANCE_EXP`,
		`IN_INSPECTION_EXP`);
	SET `OUT_CAR_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_CAR`(
	IN `IN_CAR_ID` INT UNSIGNED,
	IN `IN_DRIVER_ID` INT UNSIGNED,
    IN `IN_BRAND` VARCHAR(32),
    IN `IN_MODEL` VARCHAR(32),
    IN `IN_YEAR_OF_PROD` INT UNSIGNED,
    IN `IN_REGISTRATION_NO` VARCHAR(16),
    IN `IN_INSURANCE_EXP` DATE,
    IN `IN_INSPECTION_EXP` DATE)
BEGIN 
	UPDATE `foodwarehouse`.`CAR`
	SET `DRIVER_ID` = `IN_DRIVER_ID`,
		`BRAND` = `IN_BRAND`,
		`MODEL` = `IN_MODEL`,
		`YEAR_OF_PROD` = `IN_YEAR_OF_PROD`,
		`REGISTRATION_NO` = `IN_REGISTRATION_NO`,
		`INSURANCE_EXP` = `IN_INSURANCE_EXP`,
		`INSPECTION_EXP` = `IN_INSPECTION_EXP`
	WHERE `CAR_ID` = `IN_CAR_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_CAR`(
	IN `IN_CAR_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`CAR`
	WHERE `CAR_ID` = `IN_CAR_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_MESSAGE_BY_ID`(
	IN `IN_MESSAGE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`MESSAGE`
	JOIN `foodwarehouse`.`EMPLOYEE` `MESSAGE_SENDER_EMPLOYEE` ON `MESSAGE`.`SENDER_ID` = `MESSAGE_SENDER_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `MESSAGE_SENDER_EMPLOYEE_USER` ON `MESSAGE_SENDER_EMPLOYEE`.`USER_ID` = `MESSAGE_SENDER_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `MESSAGE_RECEIVER_EMPLOYEE` ON `MESSAGE`.`RECEIVER_ID` = `MESSAGE_RECEIVER_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN`foodwarehouse`.`USER` `MESSAGE_RECEIVER_EMPLOYEE_USER` ON `MESSAGE_RECEIVER_EMPLOYEE`.`USER_ID` = `MESSAGE_RECEIVER_EMPLOYEE_USER`.`USER_ID`
	WHERE `MESSAGE`.`MESSAGE_ID` = `IN_MESSAGE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_MESSAGES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`MESSAGE`
	JOIN `foodwarehouse`.`EMPLOYEE` `MESSAGE_SENDER_EMPLOYEE` ON `MESSAGE`.`SENDER_ID` = `MESSAGE_SENDER_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `MESSAGE_SENDER_EMPLOYEE_USER` ON `MESSAGE_SENDER_EMPLOYEE`.`USER_ID` = `MESSAGE_SENDER_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `MESSAGE_RECEIVER_EMPLOYEE` ON `MESSAGE`.`RECEIVER_ID` = `MESSAGE_RECEIVER_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN`foodwarehouse`.`USER` `MESSAGE_RECEIVER_EMPLOYEE_USER` ON `MESSAGE_RECEIVER_EMPLOYEE`.`USER_ID` = `MESSAGE_RECEIVER_EMPLOYEE_USER`.`USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EMPLOYEE_MESSAGES`(
		IN `IN_EMPLOYEE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`MESSAGE`
	JOIN `foodwarehouse`.`EMPLOYEE` `MESSAGE_SENDER_EMPLOYEE` ON `MESSAGE`.`SENDER_ID` = `MESSAGE_SENDER_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `MESSAGE_SENDER_EMPLOYEE_USER` ON `MESSAGE_SENDER_EMPLOYEE`.`USER_ID` = `MESSAGE_SENDER_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `MESSAGE_RECEIVER_EMPLOYEE` ON `MESSAGE`.`RECEIVER_ID` = `MESSAGE_RECEIVER_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN`foodwarehouse`.`USER` `MESSAGE_RECEIVER_EMPLOYEE_USER` ON `MESSAGE_RECEIVER_EMPLOYEE`.`USER_ID` = `MESSAGE_RECEIVER_EMPLOYEE_USER`.`USER_ID`
	WHERE `MESSAGE`.`RECEIVER_ID` = `IN_EMPLOYEE_ID`
	OR `MESSAGE`.`SENDER_ID` = `IN_EMPLOYEE_ID`
	ORDER BY `MESSAGE`.`MESSAGE_ID` DESC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_MESSAGE`(
    IN `IN_SENDER_ID` INT UNSIGNED,
    IN `IN_RECEIVER_ID` INT UNSIGNED,
    IN `IN_CONTENT` TEXT,
	OUT `OUT_MESSAGE_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`MESSAGE`(
		`SENDER_ID`,
		`RECEIVER_ID`,
		`CONTENT`,
		`MESSAGE_STATE`,
		`SEND_DATE`,
		`READ_DATE`)
	VALUES(
		`IN_SENDER_ID`,
		`IN_RECEIVER_ID`,
		`IN_CONTENT`,
		"SENT",
		CURRENT_DATE(),
		NULL);
	SET `OUT_MESSAGE_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_MESSAGE_CONTENT`(
	IN `IN_MESSAGE_ID` INT UNSIGNED,
    IN `IN_CONTENT` TEXT,
	OUT `OUT_SEND_DATE` DATE) 
BEGIN 
	UPDATE `foodwarehouse`.`MESSAGE`
	SET `CONTENT` = `IN_CONTENT`
	WHERE `MESSAGE_ID` = `IN_MESSAGE_ID`
	AND `MESSAGE`.`MESSAGE_STATE` != `READ`;
	SET `OUT_SEND_DATE` = (
		SELECT `MESSAGE`.`SEND_DATE` 
		FROM `foodwarehouse`.`MESSAGE` 
		WHERE `MESSAGE_ID` = `IN_MESSAGE_ID`);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_MESSAGE_READ`(
	IN `IN_MESSAGE_ID` INT UNSIGNED) 
BEGIN 
	UPDATE `foodwarehouse`.`MESSAGE`
	SET `MESSAGE_STATE` = "READ",
		`READ_DATE` = CURRENT_DATE()
	WHERE `MESSAGE_ID` = `IN_MESSAGE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`COUNT_UNREAD_RECEIVED_MESSAGES`(
	IN `IN_RECEIVER_ID` INT UNSIGNED) 
BEGIN 
	SELECT COUNT(*) `RESULT`
	FROM `foodwarehouse`.`MESSAGE`
	WHERE `MESSAGE`.`RECEIVER_ID` = `IN_RECEIVER_ID`
	AND `MESSAGE`.`MESSAGE_STATE` =! "READ";
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_MESSAGE`(
	IN `IN_MESSAGE_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`MESSAGE`
	WHERE `MESSAGE_ID` = `IN_MESSAGE_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PAYMENT_TYPE_BY_ID`(
	IN `IN_PAYMENT_TYPE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PAYMENT_TYPE`
	WHERE `PAYMENT_TYPE_ID` = `IN_PAYMENT_TYPE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PAYMENT_TYPES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PAYMENT_TYPE`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_PAYMENT_TYPE`(
    IN `IN_PAYMENT_TYPE` VARCHAR(32),
	OUT `OUT_PAYMENT_TYPE_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`PAYMENT_TYPE`(
		`PAYMENT_TYPE`)
	VALUES(
		`IN_PAYMENT_TYPE`);
	SET `OUT_PAYMENT_TYPE_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PAYMENT_TYPE`(
	IN `IN_PAYMENT_TYPE_ID` INT UNSIGNED,
    IN `IN_PAYMENT_TYPE` VARCHAR(32))
BEGIN 
	UPDATE `foodwarehouse`.`PAYMENT_TYPE`
	SET `PAYMENT_TYPE` = `IN_PAYMENT_TYPE`
	WHERE `PAYMENT_TYPE_ID` = `IN_PAYMENT_TYPE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_PAYMENT_TYPE`(
	IN `IN_PAYMENT_TYPE_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`PAYMENT_TYPE`
	WHERE `PAYMENT_TYPE_ID` = `IN_PAYMENT_TYPE_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PAYMENT_BY_ID`(
	IN `IN_PAYMENT_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PAYMENT`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `PAYMENT_PAYMENT_TYPE` ON `PAYMENT`.`PAYMENT_TYPE_ID` = `PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PAYMENTS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PAYMENT`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `PAYMENT_PAYMENT_TYPE` ON `PAYMENT`.`PAYMENT_TYPE_ID` = `PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CLIENT_PAYMENTS`(
	IN `IN_USERNAME` VARCHAR(32)) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PAYMENT`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `PAYMENT_PAYMENT_TYPE` ON `PAYMENT`.`PAYMENT_TYPE_ID` = `PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	WHERE `PAYMENT_ID` IN (
		SELECT `PAYMENT_ID` 
		FROM `foodwarehouse`.`ORDER`
		JOIN `foodwarehouse`.`CUSTOMER` ON `ORDER`.`CUSTOMER_ID` = `CUSTOMER`.`CUSTOMER_ID`
		JOIN `foodwarehouse`.`USER` ON `CUSTOMER`.`USER_ID` = `USER`.`USER_ID`
		WHERE `USER`.`USERNAME` = `IN_USERNAME`);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_PAYMENT`(
    IN `IN_PAYMENT_TYPE_ID` INT UNSIGNED,
	IN `IN_PAYMENT_VALUE` FLOAT(8,2),
	OUT `OUT_PAYMENT_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`PAYMENT`(
		`PAYMENT_TYPE_ID`,
		`PAYMENT_VALUE`,
		`PAYMENT_STATE`)
	VALUES(
		`IN_PAYMENT_TYPE_ID`,
		`IN_PAYMENT_VALUE`,
		"IN PROGRESS");
	SET `OUT_PAYMENT_ID` = LAST_INSERT_ID();
END;//


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PAYMENT_VALUE`(
	IN `IN_PAYMENT_ID` INT UNSIGNED,
	IN `IN_PAYMENT_VALUE` FLOAT(8,2))
BEGIN 
	IF 
		(SELECT `PAYMENT`.`PAYMENT_STATE` 
		FROM `foodwarehouse`.`PAYMENT` 
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`) = 'IN PROGRESS' 
		OR
		(SELECT `PAYMENT`.`PAYMENT_STATE` 
		FROM `foodwarehouse`.`PAYMENT` 
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`) = 'WAITING FOR PAYMENT' 
	THEN
		UPDATE `foodwarehouse`.`PAYMENT`
		SET `PAYMENT_VALUE` = `IN_PAYMENT_VALUE`
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`;

		SELECT * 
		FROM `foodwarehouse`.`PAYMENT`
		JOIN `foodwarehouse`.`PAYMENT_TYPE` `PAYMENT_PAYMENT_TYPE` ON `PAYMENT`.`PAYMENT_TYPE_ID` = `PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`;
	END IF;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_PAYMENT`(
	IN `IN_PAYMENT_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`PAYMENT`
	WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PAYMENT_STATE`(
	IN `IN_PAYMENT_ID` INT UNSIGNED,
	IN `IN_PAYMENT_STATE` VARCHAR(32))
BEGIN 
	IF 
		(SELECT `PAYMENT`.`PAYMENT_STATE` 
		FROM `foodwarehouse`.`PAYMENT` 
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`) = 'IN PROGRESS' 
		OR
		(SELECT `PAYMENT`.`PAYMENT_STATE` 
		FROM `foodwarehouse`.`PAYMENT` 
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`) = 'WAITING FOR PAYMENT' 
	THEN
		UPDATE `foodwarehouse`.`PAYMENT`
		SET `PAYMENT_STATE` = `IN_PAYMENT_STATE`
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`;

		SELECT * 
		FROM `foodwarehouse`.`PAYMENT`
		JOIN `foodwarehouse`.`PAYMENT_TYPE` `PAYMENT_PAYMENT_TYPE` ON `PAYMENT`.`PAYMENT_TYPE_ID` = `PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
		WHERE `PAYMENT_ID` = `IN_PAYMENT_ID`;
	END IF;
END;//




--*******************************************************************************************--
--*******************************************************************************************--



DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_DELIVERY_BY_ID`(
	IN `IN_DELIVERY_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`DELIVERY`
	JOIN `foodwarehouse`.`ADDRESS` `DELIVERY_ADDRESS` ON `DELIVERY`.`ADDRESS_ID` = `DELIVERY_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `DELIVERY_EMPLOYEE` ON `DELIVERY`.`SUPPLIER_ID` = `DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `DELIVERY_EMPLOYEE_USER` ON `DELIVERY_EMPLOYEE`.`USER_ID` = `DELIVERY_EMPLOYEE_USER`.`USER_ID`
	WHERE `DELIVERY_ID` = `IN_DELIVERY_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_DELIVERIES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`DELIVERY`
	JOIN `foodwarehouse`.`ADDRESS` `DELIVERY_ADDRESS` ON `DELIVERY`.`ADDRESS_ID` = `DELIVERY_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `DELIVERY_EMPLOYEE` ON `DELIVERY`.`SUPPLIER_ID` = `DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `DELIVERY_EMPLOYEE_USER` ON `DELIVERY_EMPLOYEE`.`USER_ID` = `DELIVERY_EMPLOYEE_USER`.`USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_DELIVERY`(
    IN `IN_ADDRESS_ID` INT UNSIGNED,
    IN `IN_SUPPLIER_ID` INT UNSIGNED,
	OUT `OUT_DELIVERY_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`DELIVERY`(
		`ADDRESS_ID`,
		`SUPPLIER_ID`,
		`REMOVAL_FROM_STORAGE_DATE`,
		`DELIVERY_DATE`)
	VALUES(
		`IN_ADDRESS_ID`,
		`IN_SUPPLIER_ID`,
		NULL,
		NULL);
	SET `OUT_DELIVERY_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_DELIVERY`(
	IN `IN_DELIVERY_ID` INT UNSIGNED,
    IN `IN_ADDRESS_ID` INT UNSIGNED,
    IN `IN_SUPPLIER_ID` INT UNSIGNED) 
BEGIN 
	UPDATE `foodwarehouse`.`DELIVERY`
	SET `ADDRESS_ID` = `IN_ADDRESS_ID`,
		`SUPPLIER_ID` = `IN_SUPPLIER_ID`
	WHERE `DELIVERY_ID` = `IN_DELIVERY_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_DELIVERY_REMOVE_FROM_STORAGE`(
	IN `IN_DELIVERY_ID` INT UNSIGNED,
	IN `IN_REMOVAL_FROM_STORAGE_DATE` DATE)
BEGIN 
	UPDATE `foodwarehouse`.`DELIVERY`
	SET `REMOVAL_FROM_STORAGE_DATE` = `IN_REMOVAL_FROM_STORAGE_DATE`
	WHERE `DELIVERY_ID` = `IN_DELIVERY_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_DELIVERY_COMPLETE`(
	IN `IN_DELIVERY_ID` INT UNSIGNED,
	IN `IN_DELIVERY_DATE` DATE)
BEGIN 
	UPDATE `foodwarehouse`.`DELIVERY`
	SET `DELIVERY_DATE` = `IN_DELIVERY_DATE`
	WHERE `DELIVERY_ID` = `IN_DELIVERY_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_DELIVERY`(
	IN `IN_DELIVERY_ID` INT UNSIGNED) 
BEGIN 
	DELETE FROM `foodwarehouse`.`DELIVERY`
	WHERE `DELIVERY_ID` = `IN_DELIVERY_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--




DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_ORDER_BY_ID`(
	IN `IN_ORDER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`ORDER`
	JOIN `foodwarehouse`.`PAYMENT` `ORDER_PAYMENT` ON `ORDER`.`PAYMENT_ID` = `ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `ORDER_PAYMENT_PAYMENT_TYPE` ON `ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `ORDER_CUSTOMER` ON `ORDER`.`CUSTOMER_ID` = `ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_CUSTOMER_USER` ON `ORDER_CUSTOMER`.`USER_ID` = `ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_CUSTOMER_ADDRESS` ON `ORDER_CUSTOMER`.`ADDRESS_ID` = `ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `ORDER_DELIVERY` ON `ORDER`.`DELIVERY_ID` = `ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `ORDER_DELIVERY_EMPLOYEE` ON `ORDER_DELIVERY`.`SUPPLIER_ID` = `ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_DELIVERY_EMPLOYEE_USER` ON `ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_DELIVERY_ADDRESS` ON `ORDER_DELIVERY`.`ADDRESS_ID` = `ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	WHERE `ORDER`.`ORDER_ID` = `IN_ORDER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_ORDERS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`ORDER`
	JOIN `foodwarehouse`.`PAYMENT` `ORDER_PAYMENT` ON `ORDER`.`PAYMENT_ID` = `ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `ORDER_PAYMENT_PAYMENT_TYPE` ON `ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `ORDER_CUSTOMER` ON `ORDER`.`CUSTOMER_ID` = `ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_CUSTOMER_USER` ON `ORDER_CUSTOMER`.`USER_ID` = `ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_CUSTOMER_ADDRESS` ON `ORDER_CUSTOMER`.`ADDRESS_ID` = `ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `ORDER_DELIVERY` ON `ORDER`.`DELIVERY_ID` = `ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `ORDER_DELIVERY_EMPLOYEE` ON `ORDER_DELIVERY`.`SUPPLIER_ID` = `ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_DELIVERY_EMPLOYEE_USER` ON `ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_DELIVERY_ADDRESS` ON `ORDER_DELIVERY`.`ADDRESS_ID` = `ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	ORDER BY `ORDER`.`ORDER_ID` DESC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CUSTOMER_ORDERS`(
	IN `IN_CUSTOMER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`ORDER`
	JOIN `foodwarehouse`.`PAYMENT` `ORDER_PAYMENT` ON `ORDER`.`PAYMENT_ID` = `ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `ORDER_PAYMENT_PAYMENT_TYPE` ON `ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `ORDER_CUSTOMER` ON `ORDER`.`CUSTOMER_ID` = `ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_CUSTOMER_USER` ON `ORDER_CUSTOMER`.`USER_ID` = `ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_CUSTOMER_ADDRESS` ON `ORDER_CUSTOMER`.`ADDRESS_ID` = `ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `ORDER_DELIVERY` ON `ORDER`.`DELIVERY_ID` = `ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `ORDER_DELIVERY_EMPLOYEE` ON `ORDER_DELIVERY`.`SUPPLIER_ID` = `ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_DELIVERY_EMPLOYEE_USER` ON `ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_DELIVERY_ADDRESS` ON `ORDER_DELIVERY`.`ADDRESS_ID` = `ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	WHERE `ORDER_CUSTOMER`.`CUSTOMER_ID` = `IN_CUSTOMER_ID`
	ORDER BY `ORDER`.`ORDER_ID` DESC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_SUPPLIER_ACTIVE_ORDERS`(
	IN `IN_EMPLOYEE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`ORDER`
	JOIN `foodwarehouse`.`PAYMENT` `ORDER_PAYMENT` ON `ORDER`.`PAYMENT_ID` = `ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `ORDER_PAYMENT_PAYMENT_TYPE` ON `ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `ORDER_CUSTOMER` ON `ORDER`.`CUSTOMER_ID` = `ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_CUSTOMER_USER` ON `ORDER_CUSTOMER`.`USER_ID` = `ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_CUSTOMER_ADDRESS` ON `ORDER_CUSTOMER`.`ADDRESS_ID` = `ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `ORDER_DELIVERY` ON `ORDER`.`DELIVERY_ID` = `ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `ORDER_DELIVERY_EMPLOYEE` ON `ORDER_DELIVERY`.`SUPPLIER_ID` = `ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_DELIVERY_EMPLOYEE_USER` ON `ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_DELIVERY_ADDRESS` ON `ORDER_DELIVERY`.`ADDRESS_ID` = `ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	WHERE `ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID` = `IN_EMPLOYEE_ID`
	AND `ORDER`.`ORDER_STATE` = "REGISTERED"
	OR `ORDER`.`ORDER_STATE` = "COMPLETING"
	OR `ORDER`.`ORDER_STATE` = "READY TO DELIVER"
	OR `ORDER`.`ORDER_STATE` = "OUT FOR DELIVERY"
	ORDER BY `ORDER`.`ORDER_ID` ASC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_ORDER`(
    IN `IN_PAYMENT_ID` INT UNSIGNED,
    IN `IN_CUSTOMER_ID` INT UNSIGNED,
    IN `IN_DELIVERY_ID` INT UNSIGNED,
    IN `IN_COMMENT` TEXT,
	OUT `OUT_ORDER_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`ORDER`(
		`PAYMENT_ID`,
		`CUSTOMER_ID`,
		`DELIVERY_ID`,
		`COMMENT`,
		`ORDER_STATE`,
		`ORDER_DATE`)
	VALUES(
		`IN_PAYMENT_ID`,
		`IN_CUSTOMER_ID`,
		`IN_DELIVERY_ID`,
		`IN_COMMENT`,
		"PENDING",
		CURRENT_DATE());
	SET `OUT_ORDER_ID` = LAST_INSERT_ID();
END;//


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_ORDER_STATE`(
	IN `IN_ORDER_ID` INT UNSIGNED,
	IN `IN_ORDER_STATE` VARCHAR(32))
BEGIN 
	UPDATE `foodwarehouse`.`ORDER`
	SET `ORDER_STATE` = `IN_ORDER_STATE`
	WHERE `ORDER_ID` = `IN_ORDER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_ORDER_PAYMENT`(
	IN `IN_ORDER_ID` INT UNSIGNED,
	IN `IN_PAYMENT_ID` INT UNSIGNED)
BEGIN 
	UPDATE `foodwarehouse`.`ORDER`
	SET `PAYMENT_ID` = `IN_PAYMENT_ID`
	WHERE `ORDER_ID` = `IN_ORDER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_ORDER`(
	IN `IN_ORDER_ID` INT UNSIGNED)
BEGIN 
	DELETE FROM `foodwarehouse`.`ORDER`
	WHERE `ORDER_ID` = `IN_ORDER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`ORDER_STATISTICS`(
	IN `START_DATE` DATE,
	IN `END_DATE` DATE) 
BEGIN 
	SELECT COUNT(*)
    FROM `foodwarehouse`.`ORDER`
    WHERE `ORDER`.`ORDER_DATE` BETWEEN `START_DATE` AND `END_DATE`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`ORDERS_BETWEEN`(
	IN `START_DATE` DATE,
	IN `END_DATE` DATE) 
BEGIN 
	SELECT *
    FROM `foodwarehouse`.`ORDER`
	JOIN `foodwarehouse`.`PAYMENT` `ORDER_PAYMENT` ON `ORDER`.`PAYMENT_ID` = `ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `ORDER_PAYMENT_PAYMENT_TYPE` ON `ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `ORDER_CUSTOMER` ON `ORDER`.`CUSTOMER_ID` = `ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_CUSTOMER_USER` ON `ORDER_CUSTOMER`.`USER_ID` = `ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_CUSTOMER_ADDRESS` ON `ORDER_CUSTOMER`.`ADDRESS_ID` = `ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `ORDER_DELIVERY` ON `ORDER`.`DELIVERY_ID` = `ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `ORDER_DELIVERY_EMPLOYEE` ON `ORDER_DELIVERY`.`SUPPLIER_ID` = `ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `ORDER_DELIVERY_EMPLOYEE_USER` ON `ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `ORDER_DELIVERY_ADDRESS` ON `ORDER_DELIVERY`.`ADDRESS_ID` = `ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
    WHERE `ORDER`.`ORDER_DATE` BETWEEN `START_DATE` AND `END_DATE`
	AND `ORDER`.`ORDER_STATE` = "DELIVERED";
END;//

--*******************************************************************************************--
--*******************************************************************************************--

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_BATCH_BY_PRODUCT_BATCH_ID`(
	IN `IN_BATCH_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_BATCH`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_BATCH_PRODUCT` ON `PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT_BATCH`.`BATCH_ID` = `IN_BATCH_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_BATCH_BY_PRODUCT_ID`(
	IN `IN_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_BATCH`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_BATCH_PRODUCT` ON `PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID` = `IN_PRODUCT_ID`
	AND `PRODUCT_BATCH`.`EAT_BY_DATE` > DATE_ADD(CURRENT_DATE(), INTERVAL 14 DAY)
	ORDER BY `PRODUCT_BATCH`.`EAT_BY_DATE` ASC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_BATCH_WITH_DISCOUNT_BY_PRODUCT_ID`(
	IN `IN_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_BATCH`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_BATCH_PRODUCT` ON `PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID` = `IN_PRODUCT_ID`
	AND `PRODUCT_BATCH`.`DISCOUNT` != 0
	AND `PRODUCT_BATCH`.`DISCOUNT` IS NOT NULL
	AND `PRODUCT_BATCH`.`EAT_BY_DATE` >= DATE_ADD(CURRENT_DATE(), INTERVAL 4 DAY);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_BATCHES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_BATCH`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_BATCH_PRODUCT` ON `PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_PRODUCT_BATCH`(
    IN `IN_PRODUCT_ID` INT UNSIGNED,
    IN `IN_BATCH_NO` INT UNSIGNED,
    IN `IN_EAT_BY_DATE` DATE,
    IN `IN_PACKAGES_QUANTITY` INT UNSIGNED,
	OUT `OUT_BATCH_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`PRODUCT_BATCH`(
		`PRODUCT_ID`,
		`BATCH_NO`,
		`EAT_BY_DATE`,
		`DISCOUNT`,
		`PACKAGES_QUANTITY`)
	VALUES(
		`IN_PRODUCT_ID`,
		`IN_BATCH_NO`,
		`IN_EAT_BY_DATE`,
		NULL,
		`IN_PACKAGES_QUANTITY`);
	SET `OUT_BATCH_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PRODUCT_BATCH`(
	IN `IN_BATCH_ID` INT UNSIGNED,
    IN `IN_BATCH_NO` INT UNSIGNED,
	IN `IN_DISCOUNT` INT UNSIGNED,
    IN `IN_EAT_BY_DATE` DATE,
    IN `IN_PACKAGES_QUANTITY` INT UNSIGNED) 
BEGIN 
	UPDATE `foodwarehouse`.`PRODUCT_BATCH`
	SET `BATCH_NO` = `IN_BATCH_NO`,
		`EAT_BY_DATE` = `IN_EAT_BY_DATE`,
		`DISCOUNT` = `IN_DISCOUNT`,
		`PACKAGES_QUANTITY` = `IN_PACKAGES_QUANTITY`
	WHERE `BATCH_ID` = `IN_BATCH_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_PRODUCT_BATCH`(
	IN `IN_PRODUCT_BATCH_ID` INT UNSIGNED)
BEGIN 
	DELETE FROM `foodwarehouse`.`PRODUCT_BATCH`
	WHERE `PRODUCT_BATCH_ID` = `IN_PRODUCT_BATCH_ID`;
END;//

-- TRIGGER DELETE
-- TRIGGER PACKAGES_QUANTITY SUBSTRACT


--*******************************************************************************************--
--*******************************************************************************************--


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_BY_ID`(
	IN `IN_BATCH_ID` INT UNSIGNED,
	IN `IN_STORAGE_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_IN_STORAGE_PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`STORAGE` `PRODUCT_IN_STORAGE_STORAGE` ON `PRODUCT_IN_STORAGE`.`STORAGE_ID` = `PRODUCT_IN_STORAGE_STORAGE`.`STORAGE_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_STORAGE_ADDRESS` ON `PRODUCT_IN_STORAGE_STORAGE`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE` ON `PRODUCT_IN_STORAGE_STORAGE`.`MANAGER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER` ON `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`USER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `PRODUCT_IN_STORAGE`.`BATCH_ID` = `IN_BATCH_ID`
	AND `PRODUCT_IN_STORAGE`.`STORAGE_ID` = `IN_STORAGE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_BY_BATCH_ID`(
	IN `IN_BATCH_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_IN_STORAGE_PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`STORAGE` `PRODUCT_IN_STORAGE_STORAGE` ON `PRODUCT_IN_STORAGE`.`STORAGE_ID` = `PRODUCT_IN_STORAGE_STORAGE`.`STORAGE_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_STORAGE_ADDRESS` ON `PRODUCT_IN_STORAGE_STORAGE`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE` ON `PRODUCT_IN_STORAGE_STORAGE`.`MANAGER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER` ON `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`USER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `PRODUCT_IN_STORAGE`.`BATCH_ID` = `IN_BATCH_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_ALL`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_IN_STORAGE_PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`STORAGE` `PRODUCT_IN_STORAGE_STORAGE` ON `PRODUCT_IN_STORAGE`.`STORAGE_ID` = `PRODUCT_IN_STORAGE_STORAGE`.`STORAGE_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_STORAGE_ADDRESS` ON `PRODUCT_IN_STORAGE_STORAGE`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE` ON `PRODUCT_IN_STORAGE_STORAGE`.`MANAGER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER` ON `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`USER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER`.`USER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_EXPIRED_PRODUCTS_IN_STORAGES`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_IN_STORAGE_PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`STORAGE` `PRODUCT_IN_STORAGE_STORAGE` ON `PRODUCT_IN_STORAGE`.`STORAGE_ID` = `PRODUCT_IN_STORAGE_STORAGE`.`STORAGE_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_STORAGE_ADDRESS` ON `PRODUCT_IN_STORAGE_STORAGE`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE` ON `PRODUCT_IN_STORAGE_STORAGE`.`MANAGER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER` ON `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`USER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`EAT_BY_DATE` < DATE_ADD(CURRENT_DATE(), INTERVAL 4 DAY);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_PRICE`(
	IN `IN_BATCH_ID` INT UNSIGNED) 
BEGIN 
	IF (
        SELECT `PRODUCT_BATCH`.`DISCOUNT` 
        FROM `PRODUCT_BATCH` 
        WHERE `PRODUCT_BATCH`.`BATCH_ID` = `IN_BATCH_ID`
		LIMIT 1) IS NULL 
    THEN
		SELECT `PRODUCT`.`SELL_PRICE` `RESULT`
		FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
		JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_BATCH`.`BATCH_ID`
		JOIN `foodwarehouse`.`PRODUCT` ON `PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT`.`PRODUCT_ID`
		WHERE `PRODUCT_BATCH`.`BATCH_ID` = `IN_BATCH_ID`
        LIMIT 1;
	ELSE
		SELECT (`PRODUCT`.`SELL_PRICE` * (100 - `PRODUCT_BATCH`.`DISCOUNT`) / 100) `RESULT`
		FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
		JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_BATCH`.`BATCH_ID`
		JOIN `foodwarehouse`.`PRODUCT` ON `PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT`.`PRODUCT_ID`
		WHERE `PRODUCT_BATCH`.`BATCH_ID` = `IN_BATCH_ID`
        LIMIT 1;
	END IF;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_QUANTITY_WITH_REGULAR_PRICE_AND_PRODUCT_ID`(
	IN `IN_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	SELECT SUM(`PRODUCT_IN_STORAGE`.`QUANTITY`) `RESULT`
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` ON `PRODUCT`.`PRODUCT_ID` = `PRODUCT_BATCH`.`PRODUCT_ID`
	WHERE `PRODUCT_BATCH`.`EAT_BY_DATE` > DATE_ADD(CURRENT_DATE(), INTERVAL 14 DAY)
	AND `PRODUCT`.`PRODUCT_ID` = `IN_PRODUCT_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_BATCH_QUANTITY_BY_PRODUCT_BATCH_ID`(
	IN `IN_BATCH_ID` INT UNSIGNED
) 
BEGIN 
	SELECT SUM(`PRODUCT_IN_STORAGE`.`QUANTITY`) `RESULT`
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_BATCH`.`BATCH_ID`
	WHERE `PRODUCT_BATCH`.`BATCH_ID` = `IN_BATCH_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_IN_STORAGE_WITH_REGULAR_PRICE_AND_PRODUCT_ID_ASC`(
	IN `IN_PRODUCT_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_IN_STORAGE_PRODUCT_BATCH` ON `PRODUCT_IN_STORAGE`.`BATCH_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`STORAGE` `PRODUCT_IN_STORAGE_STORAGE`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_IN_STORAGE_STORAGE_ADDRESS` ON `PRODUCT_IN_STORAGE_STORAGE`.`ADDRESS_ID` = `PRODUCT_IN_STORAGE_STORAGE_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE` ON `PRODUCT_IN_STORAGE_STORAGE`.`MANAGER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER` ON `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE`.`USER_ID` = `PRODUCT_IN_STORAGE_STORAGE_EMPLOYEE_USER`.`USER_ID`
	WHERE `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`PRODUCT_ID` = `IN_PRODUCT_ID`
	AND `PRODUCT_IN_STORAGE_PRODUCT_BATCH`.`EAT_BY_DATE` > DATE_ADD(CURRENT_DATE(), INTERVAL 14 DAY)
	AND `PRODUCT_IN_STORAGE`.`QUANTITY` > 0
	ORDER BY `EAT_BY_DATE` ASC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_PRODUCT_IN_STORAGE`(
    IN `IN_BATCH_ID` INT UNSIGNED,
    IN `IN_STORAGE_ID` INT UNSIGNED,
    IN `IN_QUANTITY` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`PRODUCT_IN_STORAGE`(
		`BATCH_ID`,
		`STORAGE_ID`,
		`QUANTITY`)
	VALUES(
		`IN_BATCH_ID`,
		`IN_STORAGE_ID`,
		`IN_QUANTITY`);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PRODUCT_IN_STORAGE`(
    IN `IN_BATCH_ID` INT UNSIGNED,
    IN `IN_STORAGE_ID` INT UNSIGNED,
    IN `IN_QUANTITY` INT UNSIGNED) 
BEGIN 
	UPDATE `foodwarehouse`.`PRODUCT_IN_STORAGE`
	SET `QUANTITY` = `IN_QUANTITY`
	WHERE `BATCH_ID` = `IN_BATCH_ID`
	AND `STORAGE_ID` = `IN_STORAGE_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_PRODUCT_IN_STORAGE`(
	IN `IN_BATCH_ID` INT UNSIGNED,
	IN `IN_STORAGE_ID` INT UNSIGNED)
BEGIN 
	DELETE FROM `foodwarehouse`.`PRODUCT_IN_STORAGE`
	WHERE `BATCH_ID` = `IN_BATCH_ID`
	AND `STORAGE_ID` = `IN_STORAGE_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_ORDER_BY_ID`(
	IN `IN_ORDER_ID` INT UNSIGNED,
	IN `IN_BATCH_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_ORDER`
	JOIN `foodwarehouse`.`ORDER` `PRODUCT_ORDER_ORDER` ON `PRODUCT_ORDER`.`ORDER_ID` = `PRODUCT_ORDER_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `PRODUCT_ORDER_ORDER_PAYMENT` ON `PRODUCT_ORDER_ORDER`.`PAYMENT_ID` = `PRODUCT_ORDER_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `PRODUCT_ORDER_ORDER_PAYMENT_PAYMENT_TYPE` ON `PRODUCT_ORDER_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `PRODUCT_ORDER_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `PRODUCT_ORDER_ORDER_CUSTOMER` ON `PRODUCT_ORDER_ORDER`.`CUSTOMER_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_ORDER_ORDER_CUSTOMER_USER` ON `PRODUCT_ORDER_ORDER_CUSTOMER`.`USER_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_ORDER_CUSTOMER_ADDRESS` ON `PRODUCT_ORDER_ORDER_CUSTOMER`.`ADDRESS_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `PRODUCT_ORDER_ORDER_DELIVERY` ON `PRODUCT_ORDER_ORDER`.`DELIVERY_ID` = `PRODUCT_ORDER_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE` ON `PRODUCT_ORDER_ORDER_DELIVERY`.`SUPPLIER_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE_USER` ON `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_ORDER_DELIVERY_ADDRESS` ON `PRODUCT_ORDER_ORDER_DELIVERY`.`ADDRESS_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_ORDER_PRODUCT_BATCH` ON `PRODUCT_ORDER`.`BATCH_ID` = `PRODUCT_ORDER_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_ORDER_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT_ORDER`.`ORDER_ID` = `IN_ORDER_ID`
	AND `PRODUCT_ORDER`.`BATCH_ID` = `IN_BATCH_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_ORDER_BY_ORDER_ID`(
	IN `IN_ORDER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_ORDER`
	JOIN `foodwarehouse`.`ORDER` `PRODUCT_ORDER_ORDER` ON `PRODUCT_ORDER`.`ORDER_ID` = `PRODUCT_ORDER_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `PRODUCT_ORDER_ORDER_PAYMENT` ON `PRODUCT_ORDER_ORDER`.`PAYMENT_ID` = `PRODUCT_ORDER_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `PRODUCT_ORDER_ORDER_PAYMENT_PAYMENT_TYPE` ON `PRODUCT_ORDER_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `PRODUCT_ORDER_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `PRODUCT_ORDER_ORDER_CUSTOMER` ON `PRODUCT_ORDER_ORDER`.`CUSTOMER_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_ORDER_ORDER_CUSTOMER_USER` ON `PRODUCT_ORDER_ORDER_CUSTOMER`.`USER_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_ORDER_CUSTOMER_ADDRESS` ON `PRODUCT_ORDER_ORDER_CUSTOMER`.`ADDRESS_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `PRODUCT_ORDER_ORDER_DELIVERY` ON `PRODUCT_ORDER_ORDER`.`DELIVERY_ID` = `PRODUCT_ORDER_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE` ON `PRODUCT_ORDER_ORDER_DELIVERY`.`SUPPLIER_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE_USER` ON `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_ORDER_DELIVERY_ADDRESS` ON `PRODUCT_ORDER_ORDER_DELIVERY`.`ADDRESS_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_ORDER_PRODUCT_BATCH` ON `PRODUCT_ORDER`.`BATCH_ID` = `PRODUCT_ORDER_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_ORDER_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`
	WHERE `PRODUCT_ORDER`.`ORDER_ID` = `IN_ORDER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_PRODUCT_ORDER_ALL`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`PRODUCT_ORDER`
	JOIN `foodwarehouse`.`ORDER` `PRODUCT_ORDER_ORDER` ON `PRODUCT_ORDER`.`ORDER_ID` = `PRODUCT_ORDER_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `PRODUCT_ORDER_ORDER_PAYMENT` ON `PRODUCT_ORDER_ORDER`.`PAYMENT_ID` = `PRODUCT_ORDER_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `PRODUCT_ORDER_ORDER_PAYMENT_PAYMENT_TYPE` ON `PRODUCT_ORDER_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `PRODUCT_ORDER_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `PRODUCT_ORDER_ORDER_CUSTOMER` ON `PRODUCT_ORDER_ORDER`.`CUSTOMER_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_ORDER_ORDER_CUSTOMER_USER` ON `PRODUCT_ORDER_ORDER_CUSTOMER`.`USER_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_ORDER_CUSTOMER_ADDRESS` ON `PRODUCT_ORDER_ORDER_CUSTOMER`.`ADDRESS_ID` = `PRODUCT_ORDER_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `PRODUCT_ORDER_ORDER_DELIVERY` ON `PRODUCT_ORDER_ORDER`.`DELIVERY_ID` = `PRODUCT_ORDER_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE` ON `PRODUCT_ORDER_ORDER_DELIVERY`.`SUPPLIER_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE_USER` ON `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_ORDER_DELIVERY_ADDRESS` ON `PRODUCT_ORDER_ORDER_DELIVERY`.`ADDRESS_ID` = `PRODUCT_ORDER_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`PRODUCT_BATCH` `PRODUCT_ORDER_PRODUCT_BATCH` ON `PRODUCT_ORDER`.`BATCH_ID` = `PRODUCT_ORDER_PRODUCT_BATCH`.`BATCH_ID`
	JOIN `foodwarehouse`.`PRODUCT` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT` ON `PRODUCT_ORDER_PRODUCT_BATCH`.`PRODUCT_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT`.`PRODUCT_ID`
	JOIN `foodwarehouse`.`MAKER` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER` ON `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT`.`MAKER_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER`.`MAKER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS` ON `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER`.`ADDRESS_ID` = `PRODUCT_ORDER_PRODUCT_BATCH_PRODUCT_MAKER_ADDRESS`.`ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_PRODUCT_ORDER`(
    IN `IN_ORDER_ID` INT UNSIGNED,
    IN `IN_BATCH_ID` INT UNSIGNED,
    IN `IN_QUANTITY` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`PRODUCT_ORDER`(
		`ORDER_ID`,
		`BATCH_ID`,
		`QUANTITY`)
	VALUES(
		`IN_ORDER_ID`,
		`IN_BATCH_ID`,
		`IN_QUANTITY`);
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`UPDATE_PRODUCT_ORDER`(
    IN `IN_ORDER_ID` INT UNSIGNED,
    IN `IN_BATCH_ID` INT UNSIGNED,
    IN `IN_QUANTITY` INT UNSIGNED) 
BEGIN 
	UPDATE `foodwarehouse`.`PRODUCT_ORDER`
	SET `QUANTITY` = `IN_QUANTITY`
	WHERE `ORDER_ID` = `IN_ORDER_ID`
	AND `BATCH_ID` = `IN_BATCH_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`DELETE_PRODUCT_ORDER`(
    IN `IN_ORDER_ID` INT UNSIGNED,
    IN `IN_BATCH_ID` INT UNSIGNED)
BEGIN 
	DELETE FROM `foodwarehouse`.`PRODUCT_ORDER`
	WHERE `ORDER_ID` = `IN_ORDER_ID`
	AND `BATCH_ID` = `IN_BATCH_ID`;
END;//


--*******************************************************************************************--
--*******************************************************************************************--


DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_COMPLAINT_BY_ID`(
	IN `IN_COMPLAINT_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`COMPLAINT`
	JOIN `foodwarehouse`.`ORDER` `COMPLAINT_ORDER` ON `COMPLAINT`.`ORDER_ID` = `COMPLAINT_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `COMPLAINT_ORDER_PAYMENT` ON `COMPLAINT_ORDER`.`PAYMENT_ID` = `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE` ON `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `COMPLAINT_ORDER_CUSTOMER` ON `COMPLAINT_ORDER`.`CUSTOMER_ID` = `COMPLAINT_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_CUSTOMER_USER` ON `COMPLAINT_ORDER_CUSTOMER`.`USER_ID` = `COMPLAINT_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_CUSTOMER_ADDRESS` ON `COMPLAINT_ORDER_CUSTOMER`.`ADDRESS_ID` = `COMPLAINT_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `COMPLAINT_ORDER_DELIVERY` ON `COMPLAINT_ORDER`.`DELIVERY_ID` = `COMPLAINT_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE` ON `COMPLAINT_ORDER_DELIVERY`.`SUPPLIER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER` ON `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_DELIVERY_ADDRESS` ON `COMPLAINT_ORDER_DELIVERY`.`ADDRESS_ID` = `COMPLAINT_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	WHERE `COMPLAINT`.`COMPLAINT_ID` = `IN_COMPLAINT_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_COMPLAINT_BY_ORDER_ID`(
	IN `IN_ORDER_ID` INT UNSIGNED) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`COMPLAINT`
	JOIN `foodwarehouse`.`ORDER` `COMPLAINT_ORDER` ON `COMPLAINT`.`ORDER_ID` = `COMPLAINT_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `COMPLAINT_ORDER_PAYMENT` ON `COMPLAINT_ORDER`.`PAYMENT_ID` = `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE` ON `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `COMPLAINT_ORDER_CUSTOMER` ON `COMPLAINT_ORDER`.`CUSTOMER_ID` = `COMPLAINT_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_CUSTOMER_USER` ON `COMPLAINT_ORDER_CUSTOMER`.`USER_ID` = `COMPLAINT_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_CUSTOMER_ADDRESS` ON `COMPLAINT_ORDER_CUSTOMER`.`ADDRESS_ID` = `COMPLAINT_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `COMPLAINT_ORDER_DELIVERY` ON `COMPLAINT_ORDER`.`DELIVERY_ID` = `COMPLAINT_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE` ON `COMPLAINT_ORDER_DELIVERY`.`SUPPLIER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER` ON `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_DELIVERY_ADDRESS` ON `COMPLAINT_ORDER_DELIVERY`.`ADDRESS_ID` = `COMPLAINT_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	WHERE `COMPLAINT`.`ORDER_ID` = `IN_ORDER_ID`
	ORDER BY `COMPLAINT`.`SEND_DATE` DESC;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_COMPLAINTS`() 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`COMPLAINT`
	JOIN `foodwarehouse`.`ORDER` `COMPLAINT_ORDER` ON `COMPLAINT`.`ORDER_ID` = `COMPLAINT_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `COMPLAINT_ORDER_PAYMENT` ON `COMPLAINT_ORDER`.`PAYMENT_ID` = `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE` ON `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `COMPLAINT_ORDER_CUSTOMER` ON `COMPLAINT_ORDER`.`CUSTOMER_ID` = `COMPLAINT_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_CUSTOMER_USER` ON `COMPLAINT_ORDER_CUSTOMER`.`USER_ID` = `COMPLAINT_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_CUSTOMER_ADDRESS` ON `COMPLAINT_ORDER_CUSTOMER`.`ADDRESS_ID` = `COMPLAINT_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `COMPLAINT_ORDER_DELIVERY` ON `COMPLAINT_ORDER`.`DELIVERY_ID` = `COMPLAINT_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE` ON `COMPLAINT_ORDER_DELIVERY`.`SUPPLIER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER` ON `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_DELIVERY_ADDRESS` ON `COMPLAINT_ORDER_DELIVERY`.`ADDRESS_ID` = `COMPLAINT_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`GET_CUSTOMER_COMPLAINTS`(
	IN `IN_CUSTOMER_ID` VARCHAR(32)) 
BEGIN 
	SELECT * 
	FROM `foodwarehouse`.`COMPLAINT`
	JOIN `foodwarehouse`.`ORDER` `COMPLAINT_ORDER` ON `COMPLAINT`.`ORDER_ID` = `COMPLAINT_ORDER`.`ORDER_ID`
	JOIN `foodwarehouse`.`PAYMENT` `COMPLAINT_ORDER_PAYMENT` ON `COMPLAINT_ORDER`.`PAYMENT_ID` = `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_ID`
	JOIN `foodwarehouse`.`PAYMENT_TYPE` `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE` ON `COMPLAINT_ORDER_PAYMENT`.`PAYMENT_TYPE_ID` = `COMPLAINT_ORDER_PAYMENT_PAYMENT_TYPE`.`PAYMENT_TYPE_ID`
	JOIN `foodwarehouse`.`CUSTOMER` `COMPLAINT_ORDER_CUSTOMER` ON `COMPLAINT_ORDER`.`CUSTOMER_ID` = `COMPLAINT_ORDER_CUSTOMER`.`CUSTOMER_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_CUSTOMER_USER` ON `COMPLAINT_ORDER_CUSTOMER`.`USER_ID` = `COMPLAINT_ORDER_CUSTOMER_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_CUSTOMER_ADDRESS` ON `COMPLAINT_ORDER_CUSTOMER`.`ADDRESS_ID` = `COMPLAINT_ORDER_CUSTOMER_ADDRESS`.`ADDRESS_ID`
	JOIN `foodwarehouse`.`DELIVERY` `COMPLAINT_ORDER_DELIVERY` ON `COMPLAINT_ORDER`.`DELIVERY_ID` = `COMPLAINT_ORDER_DELIVERY`.`DELIVERY_ID`
	JOIN `foodwarehouse`.`EMPLOYEE` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE` ON `COMPLAINT_ORDER_DELIVERY`.`SUPPLIER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`EMPLOYEE_ID`
	JOIN `foodwarehouse`.`USER` `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER` ON `COMPLAINT_ORDER_DELIVERY_EMPLOYEE`.`USER_ID` = `COMPLAINT_ORDER_DELIVERY_EMPLOYEE_USER`.`USER_ID`
	JOIN `foodwarehouse`.`ADDRESS` `COMPLAINT_ORDER_DELIVERY_ADDRESS` ON `COMPLAINT_ORDER_DELIVERY`.`ADDRESS_ID` = `COMPLAINT_ORDER_DELIVERY_ADDRESS`.`ADDRESS_ID`
	WHERE `COMPLAINT_ORDER_CUSTOMER`.`CUSTOMER_ID` = `IN_CUSTOMER_ID`;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`INSERT_COMPLAINT`(
    IN `IN_ORDER_ID` INT UNSIGNED,
    IN `IN_CONTENT` TEXT,
	OUT `OUT_COMPLAINT_ID` INT UNSIGNED) 
BEGIN 
	INSERT INTO `foodwarehouse`.`COMPLAINT`(
		`ORDER_ID`,
		`CONTENT`,
		`SEND_DATE`,
		`COMPLAINT_STATE`,
		`DECISION`,
		`DECISION_DATE`)
	VALUES(
		`IN_ORDER_ID`,
		`IN_CONTENT`,
		CURRENT_DATE(),
		"REGISTERED", 
		NULL,
		NULL);
	SET `OUT_COMPLAINT_ID` = LAST_INSERT_ID();
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`COMPLAINT_CANCEL`(
    IN `IN_COMPLAINT_ID` INT UNSIGNED) 
BEGIN 
	IF (SELECT `COMPLAINT_STATE` 
		FROM `foodwarehouse`.`COMPLAINT` 
		WHERE `COMPLAINT_ID` = `IN_COMPLAINT_ID`) = "REGISTERED" 
	THEN
		UPDATE `foodwarehouse`.`COMPLAINT`
		SET `COMPLAINT_STATE` = "CANCELED",
			`DECISION_DATE` = CURRENT_DATE()
		WHERE `COMPLAINT_ID` = `IN_COMPLAINT_ID`;
	END IF;
END;//

DELIMITER //
CREATE PROCEDURE `foodwarehouse`.`COMPLAINT_ADD_DECISION`(
    IN `IN_COMPLAINT_ID` INT UNSIGNED,
	IN `IN_DECISION` TEXT,
	IN `IN_STATE` VARCHAR(32)) 
BEGIN 
	IF (SELECT `COMPLAINT_STATE` 
		FROM `foodwarehouse`.`COMPLAINT` 
		WHERE `COMPLAINT_ID` = `IN_COMPLAINT_ID`) = "REGISTERED" 
	THEN
		UPDATE `foodwarehouse`.`COMPLAINT`
		SET `COMPLAINT_STATE` = `IN_STATE`,
			`DECISION` = `IN_DECISION`,
			`DECISION_DATE` = CURRENT_DATE()
		WHERE `COMPLAINT_ID` = `IN_COMPLAINT_ID`;
	END IF;
END;//


